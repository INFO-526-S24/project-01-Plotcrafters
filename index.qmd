---
title: "Project title"
subtitle: "INFO 526 - Project 1"
author: "Team name"
format: html
editor: visual
---

## Abstract

Add project abstract here.

## Introduction

## Question 1 : How many UFO sightings have been reported worldwide, and are there particular regions where these sightings occur more frequently?

### Introduction

### Approach

### Analysis
```{r}
library(tidyverse)

#> Loading the Dataset 

#> UFO_Sightings


ufo_sightings <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-06-25/ufo_sightings.csv", show_col_types = FALSE)

summary(ufo_sightings)

```
Data Cleaning: First, we'll ensure that the dataset is clean, with no missing or invalid values that could affect our analysis.

Descriptive Statistics: We'll calculate summary statistics such as the mean, median, and standard deviation of the number of sightings globally to understand the distribution.

Geographical Visualization: Using latitude, longitude, and state data, we'll create a heatmap and choropleth map to visualize the global distribution of UFO sightings. This will help identify geographical hotspots and trends.

Spatial Analysis: We'll perform spatial clustering using algorithms like K-means to identify regions with a high concentration of sightings. Additionally, we'll assess spatial autocorrelation to determine if there are spatial patterns in the distribution of sightings.

```{r}

library(ggplot2)
library(dplyr)

# Read the data
ufo_sightings <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-06-25/ufo_sightings.csv")

# Data Cleaning
ufo_sightings_clean <- ufo_sightings %>%
  filter(!is.na(latitude), !is.na(longitude)) # Remove rows with missing latitude or longitude

# Create Heatmap
ggplot(ufo_sightings_clean, aes(x = longitude, y = latitude)) +
  geom_bin2d(bins = 50) + # Adjust bins for resolution
  scale_fill_gradient(name = "Frequency", low = "blue", high = "red") +
  labs(title = "Global Distribution of UFO Sightings") +
  theme_minimal()

```
This heatmap of UFO sightings worldwide, where each bin represents a certain area on the map, and the color intensity represents the frequency of sightings in that area. This visualization will help us identify regions with higher concentrations of UFO sightings. In the above Heatmap, we can tell most of the sightings are around the USA region and little over East Europe, the frequency is not distributed around as expected, the entire map is below 2000 sightings and UAS having higher than 2000.
This suggests that while UFO sightings are reported worldwide, they remain rare events. Factors such as population density, cultural beliefs, and reporting biases likely contribute to the observed distribution patterns. Further exploration of these factors is necessary to better understand the underlying reasons for the observed variations in UFO sighting frequencies.


```{r}
# Load necessary libraries
library(ggplot2)
library(dplyr)

# Read the UFO sightings data
ufo_sightings <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-06-25/ufo_sightings.csv")

# Data Cleaning
ufo_sightings_clean <- ufo_sightings %>%
  filter(!is.na(state))

# Count sightings by country
sightings_by_country <- ufo_sightings_clean %>%
  count(country)

# Read world map data from ggplot2
world_map <- map_data("world")

# Merge with sightings data
world_map_with_sightings <- left_join(world_map, sightings_by_country, by = c("region" = "country"))

# Create Choropleth Map with individual sightings as points
ggplot() +
  geom_polygon(data = world_map_with_sightings, aes(x = long, y = lat, group = group, fill = n), color = "black") +
  geom_point(data = ufo_sightings_clean, aes(x = longitude, y = latitude), color = "red", alpha = 0.3) +
  labs(title = "Global Distribution of UFO Sightings by Country") +
  theme_minimal()

```
This graph overlays the individual UFO sightings as red points on top of the choropleth map, allowing you to see both the country-level distribution and the specific locations of sightings. This along side the heatmap will give a better understanding where the freaquency and distribution of UFO sightings take place.


### Discussion

## Question 2: Is there any specific time of the day when UFO sighting are more prevalent?

### Introduction

For the second question we want to visualize any temporal trends in UFO sightings throughout the day. This visual representation will help identify peak hours and potential patterns associated with different times of the day.

### Approach

Initially the dataset `ufo_sightings` was loaded from the "TidyTuesday" source using the `read.csv` function in R. The `date_time` column was verified to ensure if it is the correct data types.

After that we've created a new variable undername `time_of_day` , upon extracting time from `date_time` variable we've created time bins morning_hours (6:00 AM - 11:59 AM), afternoon_hours(12:00 PM - 17:59 PM), evening_hours(18:00 PM - 21:59 PM), night_hours(22:00 PM - 5:59 AM). and analyzed sighting patterns within each bin.

After that we've grouped the data for each bin and counted the number of ufo sightings and saved it in dataset under name \_\_\_\_\_\_\_\_.

Then we've plotted the \_\_\_\_\_\_\_ dataset using horizontal bar chart with count of ufo_sightings at x-axis and different time bins at y-axis.

### Analysis

```{r echo=FALSE, warning=FALSE, error=FALSE, message=FALSE, results='hide'}
if(!require(pacman))
  install.packages("pacman")

pacman::p_load(tidyverse,
               dplyr,
               leaflet)
```

```{r echo=FALSE, warning=FALSE, error=FALSE, message=FALSE}
```

```{r}
# Load necessary libraries
library(tidyverse)

#> Loading the Dataset 

#> UFO_Sightings

ufo_sightings <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-06-25/ufo_sightings.csv", show_col_types = FALSE)

#> Data Wrangling

#> Exploring the data interactively
#View(ufo_sightings)

#Displaying first few entries of date_time column
#head(ufo_sightings$date_time)

#Displaying the data type of the date_time column
#class(ufo_sightings$date_time)

#> Finding Missing Data in date_time
#sum(is.na(ufo_sightings$date_time))

# Load the lubridate package
library(lubridate)


# converting character strings of date_time variable into a format that R can recognize and manipulate as date-time data.
ufo_sightings$date_time <- as.POSIXct(ufo_sightings$date_time, format = "%m/%d/%Y %H:%M")

# Extracting the hour component
hour_of_day <- hour(ufo_sightings$date_time)

# Define time ranges for each bin
morning_hours <- 6:11
afternoon_hours <- 12:17
evening_hours <- 18:21
night_hours <- c(22:23, 0:5)

# Function to assign time bins
assign_time_bin <- function(hour_of_day) {
  if (hour_of_day %in% morning_hours) {
    return("Morning")
  } else if (hour_of_day %in% afternoon_hours) {
    return("Afternoon")
  } else if (hour_of_day %in% evening_hours) {
    return("Evening")
  } else {
    return("Night")
  }
}

# Create a new variable representing the time of day bins
ufo_sightings$time_of_day <- sapply(hour_of_day, assign_time_bin)

# Output the time_of_day variable
#ufo_sightings$time_of_day

# Displaying date_time and time_of_day variables of ufo_sightings dataframe side by side
# View(ufo_sightings[, c("date_time", "time_of_day")])

# Write the dataframe to a CSV file
#write.csv(ufo_sightings, "ufo_sightings_with_time_of_day.csv", row.names = FALSE)

#finding out the current working directory in R to get the ufo_sightings_with_time_of_day.csv dataframe
#getwd()

# Plotting Time Trend for UFO sightings


```

```{r}
suppressWarnings({
# Load necessary libraries
library(tidyverse)

#> Loading the Dataset 

#> UFO_Sightings

ufo_sightings <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-06-25/ufo_sightings.csv", show_col_types = FALSE)

#> Data Wrangling

#> Exploring the data interactively
#View(ufo_sightings)

#Displaying first few entries of date_time column
#head(ufo_sightings$date_time)

#Displaying the data type of the date_time column
#class(ufo_sightings$date_time)

#> Finding Missing Data in date_time
#sum(is.na(ufo_sightings$date_time))

# Load the lubridate package
library(lubridate)


# converting character strings of date_time variable into a format that R can recognize and manipulate as date-time data.
ufo_sightings$date_time <- as.POSIXct(ufo_sightings$date_time, format = "%m/%d/%Y %H:%M")

# Extracting the hour component
hour_of_day <- hour(ufo_sightings$date_time)

# Define time ranges for each bin
morning_hours <- 6:11
afternoon_hours <- 12:17
evening_hours <- 18:21
night_hours <- c(22:23, 0:5)

# Function to assign time bins
assign_time_bin <- function(hour_of_day) {
  if (hour_of_day %in% morning_hours) {
    return("Morning")
  } else if (hour_of_day %in% afternoon_hours) {
    return("Afternoon")
  } else if (hour_of_day %in% evening_hours) {
    return("Evening")
  } else {
    return("Night")
  }
}

# Create a new variable representing the time of day bins
ufo_sightings$time_of_day <- sapply(hour_of_day, assign_time_bin)

# Output the time_of_day variable
#ufo_sightings$time_of_day

# Displaying date_time and time_of_day variables of ufo_sightings dataframe side by side
# View(ufo_sightings[, c("date_time", "time_of_day")])

# Write the dataframe to a CSV file
#write.csv(ufo_sightings, "ufo_sightings_with_time_of_day.csv", row.names = FALSE)

#finding out the current working directory in R to get the ufo_sightings_with_time_of_day.csv dataframe
#getwd()

library(ggplot2)
library(dplyr)

# Read the CSV file and prepare the data
ufo_data <- read.csv("ufo_sightings_with_time_of_day.csv")

# Convert time_of_day to a factor with specified order
ufo_data$time_of_day <- factor(ufo_data$time_of_day, levels = c("Morning", "Afternoon", "Evening", "Night"))

# Group the data by time_of_day and summarize to calculate count of sightings
ufo_summary <- ufo_data %>%
  group_by(time_of_day) %>%
  summarize(count = n())

# Create the plot
ggplot(ufo_summary, aes(x = time_of_day, y = count, fill = count)) +
  geom_bar(stat = "identity") +
  scale_fill_gradient(low = "lightblue", high = "darkblue") +  # Use a gradient scale from light blue to dark blue
  geom_text(aes(label = count), vjust = -0.5, color = "black") +
  theme_minimal() +
  labs(title = "UFO Sightings Count by Time of Day",
       x = "Time of Day",
       y = "Count") +
  theme(plot.background = element_rect(fill = "transparent", color = NA),
        panel.background = element_rect(fill = "transparent", color = NA),
        panel.grid.major = element_line(color = "gray", size = 0.5),  # Add major grid lines
        panel.grid.minor = element_blank(),
        axis.line = element_line(color = "black"),
        axis.text = element_text(color = "black"),
        axis.title = element_text(color = "black"),
        plot.title = element_text(hjust = 0.5, size = 20, color = "black"))

})
```

### Discussion
